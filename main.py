import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from dotenv import load_dotenv
import openai

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

openai.api_key = OPENAI_API_KEY

@dp.message_handler()
async def handle_message(message: types.Message):
    user_input = message.text
    await message.answer("üí¨ –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º...")

    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "–¢—ã ‚Äî SanatAi, –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç-–∫–ª–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–º–æ–≥–∞–µ—à—å, –∑–∞–±–æ—Ç–∏—à—å—Å—è, –æ—Ç–≤–µ—á–∞–µ—à—å –æ—Ç –µ–≥–æ –∏–º–µ–Ω–∏, –≤–µ–¥—ë—à—å –¥–µ–ª–∞."},
            {"role": "user", "content": user_input}
        ]
    )
    answer = response["choices"][0]["message"]["content"]
    await message.answer(answer)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)